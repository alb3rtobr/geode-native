name: MacOS Latest CI

on: [push]

jobs:
  build-and-unit-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode-1120-mac
      with:
        path: ~/apache-geode
        key: apache-geode-1120-mac
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode-1120-mac.outputs.cache-hit}}
        GEODE_VERSION: 1.12.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: brew install doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl\@1.1/
    - name: cmake build
      run: cmake --build build/ --target apache-geode_unittests -- -j4
    - name: unit tests
      run: build/cppcache/test/apache-geode_unittests

  old-integration-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode-1120-mac
      with:
        path: ~/apache-geode
        key: apache-geode-1120-mac
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode-1120-mac.outputs.cache-hit}}
        GEODE_VERSION: 1.12.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: brew install doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl\@1.1/
    - name: cmake build
      run: cmake --build build/ --target javaobject -- -j4 && cmake --build build/ --target unit_test_callbacks -- -j4 && cmake --build build/ --target cppcache-integration-tests -- -j4
    - name: old integration tests
      run: cd build/cppcache/integration-test/ && ctest --timeout 500 -L STABLE -C Debug -j1

  new-integration-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode-1120-mac
      with:
        path: ~/apache-geode
        key: apache-geode-1120-mac
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode-1120-mac.outputs.cache-hit}}
        GEODE_VERSION: 1.12.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: brew install doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl\@1.1/
    - name: cmake build
      run: cmake --build build/ --target cpp-integration-test -- -j4
    - name: new integration tests
      run: cd build/cppcache/integration/test/ && ctest -E BasicIPv6Test -j2

  acceptance-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode-1120-mac
      with:
        path: ~/apache-geode
        key: apache-geode-1120-mac
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode-1120-mac.outputs.cache-hit}}
        GEODE_VERSION: 1.12.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: brew install doxygen
    - name: Install docker
      run: |
        # https://github.com/actions/virtual-environments/issues/1143#issuecomment-652264388
        brew cask install docker
        # allow the app to run without confirmation
        xattr -d -r com.apple.quarantine /Applications/Docker.app

        # preemptively do docker.app's setup to avoid any gui prompts
        sudo /bin/cp /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd /Library/PrivilegedHelperTools
        sudo /bin/cp /Applications/Docker.app/Contents/Resources/com.docker.vmnetd.plist /Library/LaunchDaemons/
        sudo /bin/chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
        sudo /bin/chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
        sudo /bin/launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist
        open -g -a Docker.app

        # Wait for the server to start up, if applicable.
        i=0
        while ! docker system info &>/dev/null; do
          (( i++ == 0 )) && printf %s '-- Waiting for Docker to finish starting up...' || printf '.'
          sleep 1
        done
        (( i )) && printf '\n'

        echo "-- Docker is ready."
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl\@1.1/
    - name: cmake build
      run: cmake --build build/ --target cpp-acceptance-test -- -j4
    - name: new acceptance tests
      run: cd build/cppcache/acceptance-test/ && ctest -j1
